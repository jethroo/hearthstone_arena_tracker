(function() {
  "use strict";
  angular.module('ng_hat', ['rails']);

  angular.module("ng_hat").controller("MatchesController", function($scope, MatchesFactory ) {
    $scope.matchesFactory = MatchesFactory;
    $scope.matches = $scope.matchesFactory.matches();
  });

  angular.module("ng_hat").factory("MatchesFactory", function(Match) {
    var matches = [];
    var page = 1
    var fetched_all = false;

    return {
      matches: function() {
        this.getMatches();
        return matches;
      },
      getMatches: function() {
        var factory = this;
        Match.query({page: 1, per_page: 50 }).then(function (results) {
          page = 6
          console.log(results)
          results.forEach(function(match) {
            factory.pushMatch(match);
          });
        }, function (error) {
          // do something about the error
        });
      },
      loadMore: function() {
        if (!fetched_all) {
          var factory = this;
          Match.query({page: page, per_page: 10}).then(function (results) {
            if (results.length > 0) {
              page++;
              results.forEach(function(match) {
                factory.pushMatch(match);
              });
            } else {
              fetched_all = true;
            }
          }, function (error) {
            // do something about the error
          });
        }
      },
      pushMatch: function(match) {
        matches.push(
          {
            id: match.id,
            createdAt: match.createdAt,
            hero: match.hero,
            heroImage: match.heroImage,
            opponent: match.opponent,
            opponentImage: match.opponentImage
          }
        );
      }
    };
  });

  angular.module('ng_hat').factory('Match', ['railsResourceFactory', function (railsResourceFactory) {
    return railsResourceFactory({
        url: '/matches',
        name: 'match'
    });
  }]);

  angular.module("ng_hat").directive('whenScrolled', function() {
    return function(scope, elm, attr) {
      var raw = elm[0];

      elm.bind('scroll', function() {
        if (raw.scrollTop + raw.offsetHeight + 1 >= raw.scrollHeight ) {
          scope.$apply(attr.whenScrolled);
        }
      });
    };
  });

}());
